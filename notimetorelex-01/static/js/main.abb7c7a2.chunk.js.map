{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputMovie","setInputMovie","page","movieList","setMovieList","findMovie","value","a","fetch","respond","json","data","results","movieData","console","log","tempList","map","obj","name","title","description","overview","img","backdrop_path","className","type","onChange","e","target","placeholder","style","backgroundImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA4DeA,MAzDf,WAEE,MAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAyBF,mBAAS,GAAlC,mBAAOG,EAAP,KACA,GADA,KACmCH,mBAAS,KAA5C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,yDAChBN,EAAcK,GACVA,EAFY,iEAIME,MAAM,4FAAD,OAA6FR,EAA7F,iBAAgHE,EAAhH,yBAJX,cAIVO,EAJU,gBAKGA,EAAQC,OALX,WAKVC,EALU,QAOPC,QAPO,oEAQQD,EAAKC,QARb,eAQVC,EARU,iBASVC,QAAQC,IAAIJ,GATF,QAWhBG,QAAQC,IAAIF,GAERG,EAAW,GACfH,EAAUI,KAAK,SAACN,GACd,IAAIO,EAAM,CACRC,KAAMR,EAAKS,MACXC,YAAcV,EAAKW,SACnBC,IAAI,uDAAD,OAAyDZ,EAAKa,gBAEnER,EAAQ,sBAAOA,GAAP,CAAgBE,OAE1Bd,EAAa,YAAIY,IAtBD,4CAAH,sDAyBf,OACE,sBAAKS,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAOC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOvB,EAAUuB,EAAEC,OAAOvB,QACpCwB,YAAY,wBAGrB,qBAAKL,UAAU,kBAAf,SACMtB,EAAUc,KAAI,SAAAN,GACd,OACE,qBAAKc,UAAU,OAAf,SACE,qBAAKA,UAAU,iBAAiBM,MAAO,CAAEC,gBAAe,eAAWrB,EAAKY,IAAhB,OAAxD,SACE,sBAAKE,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SAA6Bd,EAAKQ,OAClC,qBAAKM,UAAU,oBAAf,SAAoCd,EAAKU,8BCrC9CY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.abb7c7a2.chunk.js","sourcesContent":["import React , { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [inputMovie , setInputMovie] = useState('')\n  const [page , setPage] = useState(1)\n  const [movieList , setMovieList] = useState([])\n\n  const findMovie = async(value) => {\n    setInputMovie(value)\n    if(!value) return\n\n    const respond = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=fe75b6f9a90b50b99afb931b2c5b0c7d&query=${inputMovie}&page=${page}&include_adult=false`)\n    const data = await respond.json()\n\n    if(!data.results) return;\n    const movieData = await data.results\n    await console.log(data);\n\n    console.log(movieData);\n\n    let tempList = []\n    movieData.map( (data)=> {\n      let obj = {\n        name: data.title ,\n        description : data.overview,\n        img: `https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${data.backdrop_path}`\n      }\n      tempList = [...tempList,obj]\n    })\n    setMovieList([...tempList])\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"form\">\n        <input type=\"text\"\n               onChange={(e) => findMovie(e.target.value)}\n               placeholder=\"find some movie..\"\n        />\n      </div>\n      <div className=\"movie-container\">\n          { movieList.map(data => {\n            return (\n              <div className=\"zoom\">\n                <div className=\"movie-grid-con\" style={{ backgroundImage : `url(\"${data.img}\")` }} >\n                  <div className=\"movie-grid\" >\n                    <div className=\"movie-name\">{data.name}</div>\n                    <div className=\"movie-description\">{data.description}</div>\n                  </div>\n                </div>\n              </div>\n            )\n          }) }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}